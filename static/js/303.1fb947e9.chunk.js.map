{"version":3,"file":"static/js/303.1fb947e9.chunk.js","mappings":"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","sources":["API.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","pages/Home/Home.styled.js","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","pages/MovieInfo/MovieInfo.jsx","pages/MovieInfo/MovieInfo.styled.js"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '91ea660d45443b6457907c05dafcc6a1';\nconst URL = 'https://api.themoviedb.org/3/';\naxios.defaults.baseURL = URL;\n\n// фільми в тренді\n\nexport const serverHitsList = async () => {\n  try {\n    const getHitsList = await axios.get(\n      `trending/movie/day?api_key=${KEY}`\n    );\n\n    return await getHitsList.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// повне інфо про фільм\n\nexport const serverMovie = async id => {\n  try {\n    const getMovieInfo = await axios.get(\n      `movie/${id}?api_key=${KEY}&language=en-US`\n    );\n\n    return await getMovieInfo.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// пошук фільмів\n\nexport const serverSearch = async (name, page = 1) => {\n  try {\n    const getMovieName = await axios.get(\n      `search/movie?api_key=${KEY}&language=en-US&query=${name}&page=${page}&include_adult=false`\n    );\n\n    return await getMovieName.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// актори\n\nexport const serverActors = async id => {\n  try {\n    const getActors = await axios.get(\n      `movie/${id}/credits?api_key=${KEY}&language=en-US`\n    );\n\n    return await getActors.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// відгуки\n\nexport const serverReviews = async id => {\n  try {\n    const getReviews = await axios.get(\n      `movie/${id}/reviews?api_key=${KEY}&language=en-US`\n    );\n\n    return await getReviews.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import styled from 'styled-components';\n\nexport const LoaderWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 100px;\n`;\n","import { ThreeCircles } from 'react-loader-spinner';\n\nimport { LoaderWrap } from './Loader.styled.js';\n\nexport function Loader() {\n  return (\n    <>\n      <LoaderWrap>\n        <ThreeCircles\n            height=\"100\"\n            width=\"100\"\n            color=\"#05109e\"\n            wrapperStyle={{}}\n            wrapperClass=\"\"\n            visible={true}\n            ariaLabel=\"three-circles-rotating\"\n            outerCircleColor=\"\"\n            innerCircleColor=\"\"\n            middleCircleColor=\"\"\n          />;\n      </LoaderWrap>\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nconst Section = styled.section`\n  padding: 30px 15px;\n  max-width: 1320px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Title = styled.h1`\n  font-size: 36px;\n  text-align: center;\n  color: #153f65;\n  margin-bottom: 50px;\n  letter-spacing: 8px;\n  opacity: 0.7;\n`;\n\nexport { Title, Section };\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst MainCard = styled.div`\n  display: flex;\n  gap: 40px;\n`;\n\nconst MovieInfoWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  font-size: 25px;\n  padding-top: 30px;\n  line-height: 1.7;\n`;\n\nconst Title = styled.h2`\n  font-size: 30px;\n  color: #0d257b;\n  letter-spacing: 5px;\n`;\n\nconst InfoTitle = styled.span`\n  color: #4c70ac;\n  font-weight: 900;\n  padding-right: 10px;\n`;\nconst Text = styled.p`\ncolor: #4c70ac;\n\n`\nconst Wrapper = styled.ul`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 40px;\n  width: 400px;\n  height: 60px;\n`;\n\nconst Item = styled.li`\n  padding: 8px;\n  background-color: #4c70ac;\n  width: 100px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 4px;\n\n  &:hover,\n  &:focus {\n    background-color: #0e00d1;\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  color: #ffffff;\n  font-size: 18px;\n  text-decoration: none;\n`;\n\nexport {\n  MainCard,\n  MovieInfoWrap,\n  InfoTitle,\n  Title,\n  Text,\n  Wrapper,\n  StyledLink,\n  Item,\n};\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  MainCard,\n  MovieInfoWrap,\n  Title,\n  InfoTitle,\n  Text,\n  Wrapper,\n  Item,\n  StyledLink,\n} from './MovieCard.styled.js';\n\nimport defaultImg from '../../img/poster-default.jpg';\n\nexport const MovieCard = ({ movie }) => {\n  const { title, poster_path, overview, release_date, vote_average, genres } =\n    movie;\n  const location = useLocation();\n\n  return (\n    <>\n      <MainCard>\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/original${poster_path}`\n              : defaultImg\n          }\n          alt={`${title}`}\n          width=\"300\"\n        />\n        <MovieInfoWrap>\n          <Title>{title}</Title>\n          <Text>\n            <InfoTitle>Overview:</InfoTitle>\n            {overview}\n          </Text>\n          <Text>\n            <InfoTitle>Genres:</InfoTitle>\n            {genres\n              ?.map(({ name }) => {\n                return name;\n              })\n              .join(', ')}\n          </Text>\n          <Text>\n            <InfoTitle>Release date:</InfoTitle>\n            {release_date}\n          </Text>\n          <Text>\n            <InfoTitle>Vote average:</InfoTitle>\n            {vote_average}\n          </Text>\n          <Wrapper>\n          <Item>\n            <StyledLink to=\"cast\" state={{ from: location.state.from }}>\n              Cast\n            </StyledLink>\n          </Item>\n          <Item>\n            <StyledLink to=\"reviews\" state={{ from: location.state.from }}>\n              Reviews\n            </StyledLink>\n          </Item>\n        </Wrapper>\n        </MovieInfoWrap>\n     \n      </MainCard>\n    </>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string,\n    overview: PropTypes.string,\n    release_date: PropTypes.string,\n    vote_average: PropTypes.number,\n    genres: PropTypes.array,\n  }).isRequired,\n};\n","import { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { Suspense, useState, useEffect } from 'react';\nimport { serverMovie } from '../../API';\nimport { Loader } from '../../components/Loader/Loader';\nimport { Section } from '../Home/Home.styled.js';\nimport { MovieCard } from '../../components/MovieCard/MovieCard';\nimport { BackLink } from './MovieInfo.styled.js';\n\nexport default function MovieInfo() {\n  const [movie, setMovie] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    (async function getMovieId() {\n      setIsLoading(true);\n      try {\n        const movieById = await serverMovie(movieId);\n\n        setMovie(movieById);\n        setIsLoading(false);\n      } catch (error) {\n        console.log(error.message);\n      }\n    })();\n  }, [movieId]);\n\n  if (!movie) {\n    return;\n  }\n\n  return (\n    <main>\n      {isLoading && <Loader />}\n      {!isLoading && (\n        <Section>\n          <BackLink to={backLinkHref}>Go back</BackLink>\n          <MovieCard movie={movie} />\n        </Section>\n      )}\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst BackLink = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100px;\n  padding: 8px;\n  margin-bottom: 30px;\n  font-size: 16px;\n  font-weight: 700;\n  text-decoration: none;\n  background-color: transparent;\n  color: #0d257b;\n  border: 1px solid;\n  border-color: #0d257b;\n\n  transform: scale(1);\n  transition: color 300ms ease, outline 300ms ease;\n\n  &:hover,\n  &:focus {\n    outline: 2px solid #0e00d1;\n    color: #0e00d1;\n  }\n`;\n\nexport { BackLink };\n"],"names":["KEY","axios","serverHitsList","getHitsList","data","results","console","log","serverMovie","id","getMovieInfo","serverSearch","name","page","getMovieName","serverActors","getActors","cast","serverReviews","getReviews","LoaderWrap","styled","Loader","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","Section","Title","MainCard","MovieInfoWrap","InfoTitle","Text","Wrapper","Item","StyledLink","Link","MovieCard","movie","title","poster_path","overview","release_date","vote_average","genres","location","useLocation","src","defaultImg","alt","map","join","to","state","from","MovieInfo","useState","setMovie","isLoading","setIsLoading","movieId","useParams","backLinkHref","useEffect","movieById","message","Suspense","fallback","BackLink"],"sourceRoot":""}