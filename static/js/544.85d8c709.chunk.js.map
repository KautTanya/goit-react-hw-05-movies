{"version":3,"file":"static/js/544.85d8c709.chunk.js","mappings":"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","sources":["API.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/Home/Home.jsx","pages/Home/Home.styled.js"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '91ea660d45443b6457907c05dafcc6a1';\nconst URL = 'https://api.themoviedb.org/3/';\naxios.defaults.baseURL = URL;\n\n// фільми в тренді\n\nexport const serverHitsList = async () => {\n  try {\n    const getHitsList = await axios.get(\n      `trending/movie/day?api_key=${KEY}`\n    );\n\n    return await getHitsList.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// повне інфо про фільм\n\nexport const serverMovie = async id => {\n  try {\n    const getMovieInfo = await axios.get(\n      `movie/${id}?api_key=${KEY}&language=en-US`\n    );\n\n    return await getMovieInfo.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// пошук фільмів\n\nexport const serverSearch = async (name, page = 1) => {\n  try {\n    const getMovieName = await axios.get(\n      `search/movie?api_key=${KEY}&language=en-US&query=${name}&page=${page}&include_adult=false`\n    );\n\n    return await getMovieName.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// актори\n\nexport const serverActors = async id => {\n  try {\n    const getActors = await axios.get(\n      `movie/${id}/credits?api_key=${KEY}&language=en-US`\n    );\n\n    return await getActors.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// відгуки\n\nexport const serverReviews = async id => {\n  try {\n    const getReviews = await axios.get(\n      `movie/${id}/reviews?api_key=${KEY}&language=en-US`\n    );\n\n    return await getReviews.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import styled from 'styled-components';\n\nexport const LoaderWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 100px;\n`;\n","import { ThreeCircles } from 'react-loader-spinner';\n\nimport { LoaderWrap } from './Loader.styled.js';\n\nexport function Loader() {\n  return (\n    <>\n      <LoaderWrap>\n        <ThreeCircles\n            height=\"100\"\n            width=\"100\"\n            color=\"#05109e\"\n            wrapperStyle={{}}\n            wrapperClass=\"\"\n            visible={true}\n            ariaLabel=\"three-circles-rotating\"\n            outerCircleColor=\"\"\n            innerCircleColor=\"\"\n            middleCircleColor=\"\"\n          />;\n      </LoaderWrap>\n    </>\n  );\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 30px;\n`;\n\nconst Item = styled.li`\n  border-radius: 4px;\n  &:hover {\n    box-shadow: 0px 0px 7px 6px rgb(157, 182, 250);\n  }\n`;\n\nconst FilmsName = styled(Link)`\n  text-decoration: none;\n  color: #edf4fe;\n`;\n\nconst MovieInfoWrap = styled.div`\n  background-color: #153f65;\n  padding-bottom: 10px;\n`;\n\nconst MovieInfo = styled.p`\n  display: block;\n  font-size: 20px;\n  font-weight: 400;\n  text-align: center;\n  padding-top: 10px;\n`;\nexport { List, Item, FilmsName, MovieInfoWrap, MovieInfo };\n","import PropTypes from 'prop-types';\nimport {\n  List,\n  FilmsName,\n  Item,\n  MovieInfoWrap,\n  MovieInfo,\n} from './MovieList.styled.js';\nimport defaultImg from '../../img/poster-default.jpg';\n\nexport const MovieList = ({ movies, state }) => {\n  return (\n    <>\n      <List>\n        {movies.map(({ id, poster_path, title, release_date }) => {\n          const date = release_date.slice(0, 4);\n          return (\n            <Item key={id}>\n              <FilmsName to={`/movies/${id}`} state={state}>\n                <MovieInfoWrap>\n                  <img\n                    src={\n                      poster_path\n                        ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                        : defaultImg\n                    }\n                    alt={title}\n                  />\n                  <MovieInfo>\"{title}\"</MovieInfo>\n                  <MovieInfo>{date}</MovieInfo>\n                </MovieInfoWrap>\n              </FilmsName>\n            </Item>\n          );\n        })}\n      </List>\n    </>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.array,\n  state: PropTypes.object,\n};\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Loader } from '../../components/Loader/Loader';\nimport { MovieList } from '../../components/MovieList/MovieList';\nimport { serverHitsList } from '../../API';\nimport { Title, Section } from './Home.styled';\n\nexport default function Home() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    async function fetchMovies() {\n      try {\n        setIsLoading(true);\n        const trendingMovies = await serverHitsList();\n        setMovies(trendingMovies);\n        setIsLoading(false);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchMovies();\n  }, []);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {!isLoading && (\n        <main>\n          <Section>\n            <Title>Trending today</Title>\n            {movies && <MovieList movies={movies} state={location} />}\n          </Section>\n        </main>\n      )}\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nconst Section = styled.section`\n  padding: 30px 15px;\n  max-width: 1320px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Title = styled.h1`\n  font-size: 36px;\n  text-align: center;\n  color: #153f65;\n  margin-bottom: 50px;\n  letter-spacing: 8px;\n  opacity: 0.7;\n`;\n\nexport { Title, Section };\n"],"names":["KEY","axios","serverHitsList","getHitsList","data","results","console","log","serverMovie","id","getMovieInfo","serverSearch","name","page","getMovieName","serverActors","getActors","cast","serverReviews","getReviews","LoaderWrap","styled","Loader","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","List","Item","FilmsName","Link","MovieInfoWrap","MovieInfo","MovieList","movies","state","map","poster_path","title","date","release_date","slice","to","src","defaultImg","alt","Home","useState","setMovies","isLoading","setIsLoading","location","useLocation","useEffect","trendingMovies","fetchMovies","Section","Title"],"sourceRoot":""}