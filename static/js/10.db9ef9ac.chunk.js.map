{"version":3,"file":"static/js/10.db9ef9ac.chunk.js","mappings":"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","sources":["API.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/Home/Home.styled.js","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","components/LoadMore/LoadMore.styled.js","components/LoadMore/LoadMore.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '91ea660d45443b6457907c05dafcc6a1';\nconst URL = 'https://api.themoviedb.org/3/';\naxios.defaults.baseURL = URL;\n\n// фільми в тренді\n\nexport const serverHitsList = async () => {\n  try {\n    const getHitsList = await axios.get(\n      `trending/movie/day?api_key=${KEY}`\n    );\n\n    return await getHitsList.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// повне інфо про фільм\n\nexport const serverMovie = async id => {\n  try {\n    const getMovieInfo = await axios.get(\n      `movie/${id}?api_key=${KEY}&language=en-US`\n    );\n\n    return await getMovieInfo.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// пошук фільмів\n\nexport const serverSearch = async (name, page = 1) => {\n  try {\n    const getMovieName = await axios.get(\n      `search/movie?api_key=${KEY}&language=en-US&query=${name}&page=${page}&include_adult=false`\n    );\n\n    return await getMovieName.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// актори\n\nexport const serverActors = async id => {\n  try {\n    const getActors = await axios.get(\n      `movie/${id}/credits?api_key=${KEY}&language=en-US`\n    );\n\n    return await getActors.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// відгуки\n\nexport const serverReviews = async id => {\n  try {\n    const getReviews = await axios.get(\n      `movie/${id}/reviews?api_key=${KEY}&language=en-US`\n    );\n\n    return await getReviews.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import styled from 'styled-components';\n\nexport const LoaderWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 100px;\n`;\n","import { ThreeCircles } from 'react-loader-spinner';\n\nimport { LoaderWrap } from './Loader.styled.js';\n\nexport function Loader() {\n  return (\n    <>\n      <LoaderWrap>\n        <ThreeCircles\n            height=\"100\"\n            width=\"100\"\n            color=\"#05109e\"\n            wrapperStyle={{}}\n            wrapperClass=\"\"\n            visible={true}\n            ariaLabel=\"three-circles-rotating\"\n            outerCircleColor=\"\"\n            innerCircleColor=\"\"\n            middleCircleColor=\"\"\n          />;\n      </LoaderWrap>\n    </>\n  );\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 30px;\n`;\n\nconst Item = styled.li`\n  border-radius: 4px;\n  &:hover {\n    box-shadow: 0px 0px 7px 6px rgb(157, 182, 250);\n  }\n`;\n\nconst FilmsName = styled(Link)`\n  text-decoration: none;\n  color: #edf4fe;\n`;\n\nconst MovieInfoWrap = styled.div`\n  background-color: #153f65;\n  padding-bottom: 10px;\n`;\n\nconst MovieInfo = styled.p`\n  display: block;\n  font-size: 20px;\n  font-weight: 400;\n  text-align: center;\n  padding-top: 10px;\n`;\nexport { List, Item, FilmsName, MovieInfoWrap, MovieInfo };\n","import PropTypes from 'prop-types';\nimport {\n  List,\n  FilmsName,\n  Item,\n  MovieInfoWrap,\n  MovieInfo,\n} from './MovieList.styled.js';\nimport defaultImg from '../../img/poster-default.jpg';\n\nexport const MovieList = ({ movies, state }) => {\n  return (\n    <>\n      <List>\n        {movies.map(({ id, poster_path, title, release_date }) => {\n          const date = release_date.slice(0, 4);\n          return (\n            <Item key={id}>\n              <FilmsName to={`/movies/${id}`} state={state}>\n                <MovieInfoWrap>\n                  <img\n                    src={\n                      poster_path\n                        ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                        : defaultImg\n                    }\n                    alt={title}\n                  />\n                  <MovieInfo>\"{title}\"</MovieInfo>\n                  <MovieInfo>{date}</MovieInfo>\n                </MovieInfoWrap>\n              </FilmsName>\n            </Item>\n          );\n        })}\n      </List>\n    </>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.array,\n  state: PropTypes.object,\n};\n","import styled from 'styled-components';\n\nconst Section = styled.section`\n  padding: 30px 15px;\n  max-width: 1320px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Title = styled.h1`\n  font-size: 36px;\n  text-align: center;\n  color: #153f65;\n  margin-bottom: 50px;\n  letter-spacing: 8px;\n  opacity: 0.7;\n`;\n\nexport { Title, Section };\n","import styled from 'styled-components';\n\nconst Form = styled.form`\n  display: flex;\n  justify-content: center;\n  gap: 30px;\n  margin-bottom: 30px;\n`;\n\nconst Input = styled.input`\n  width: 400px;\n  padding: 10px;\n  font-weight: 500;\n  border-radius: 4px;\n  background-color: transparent;\n  border: 1px solid #0d257b;\n  color: #0d257b;\n  transition: outline 300ms ease;\n\n  &:focus,\n  &:hover {\n    outline: 2px solid #0e00d1;\n  }\n\n  &::placeholder {\n    color: #4c70ac;\n  }\n`;\n\nconst SearchBtn = styled.button`\n  background-color: #4c70ac;\n  padding: 10px 30px;\n  border-radius: 4px;\n  border: 1px solid #0d257b;\n  color: #ffffff;\n  font-size: 20px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background-color 300ms ease;\n\n  &:focus,\n  &:hover {\n    background-color: #0e00d1;\n  }\n`;\n\nexport { Form, Input, SearchBtn };\n","import PropTypes from 'prop-types';\nimport { Form, Input, SearchBtn } from './SearchForm.styled.js';\n\nexport const SearchForm = ({ updateQuery }) => {\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const inputValue = evt.currentTarget.elements.inputValue.value;\n\n    if (inputValue === '') {\n      return;\n    }\n\n    updateQuery(inputValue);\n    evt.currentTarget.reset();\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Input type=\"text\" name=\"inputValue\" placeholder=\"Enter movie name\" />\n        <SearchBtn type=\"submit\">Search</SearchBtn>\n      </Form>\n    </>\n  );\n};\n\nSearchForm.propTypes = {\n  updateQuery: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const LoadMoreBtn = styled.button`\n  display: block;\n  padding: 15px 40px;\n  margin-top: 30px;\n  margin-left: auto;\n  margin-right: auto;\n  border: 1px solid #05109e;\n  border-radius: 4px;\n  color: #ffffff;\n  background-color: #153f65;\n  text-align: center;\n  text-decoration: none;\n  cursor: pointer;\n  font-size: 20px;\n  font-weight: 500;\n  width: 200px;\n  transition: background-color 300ms ease;\n\n  &:hover,\n  &:focus {\n    background-color: #05109e;\n    border: 3px solid #05109e;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { LoadMoreBtn } from './LoadMore.styled.js';\n\nexport const LoadMore = ({ loadMore }) => {\n  return (\n    <LoadMoreBtn type=\"button\" onClick={loadMore}>\n      Load more\n    </LoadMoreBtn>\n  );\n};\n\nLoadMore.propTypes = {\n  loadMore: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { serverSearch } from '../../API';\nimport { SearchForm } from '../../components/SearchForm/SearchForm';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { Section } from 'pages/Home/Home.styled';\nimport { Loader } from '../../components/Loader/Loader';\nimport { LoadMore } from 'components/LoadMore/LoadMore';\n\nexport default function Movies() {\n  const [page, setPage] = useState(1);\n  const [total, setTotal] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    const movieName = searchParams.get('query');\n\n    if (!movieName) {\n      return;\n    }\n\n    (async function getMovieName() {\n      try {\n        setIsLoading(true);\n        const moviesByName = await serverSearch(movieName, page);\n        setMovies(prev => [...prev, ...moviesByName.results]);\n\n        setTotal(moviesByName.total_pages);\n\n        setIsLoading(false);\n      } catch (error) {\n        console.log(error);\n        console.log(error.message);\n      }\n    })();\n  }, [searchParams, page]);\n\n  const updateQuery = inputValue => {\n    setMovies([]);\n    setPage(1);\n    setTotal(null);\n    setSearchParams({ query: inputValue });\n  };\n\n  const loadMore = () => {\n    setPage(prevState => prevState + 1);\n  };\n\n  return (\n    <>\n      <main>\n        <Section>\n          <SearchForm updateQuery={updateQuery} />\n          {isLoading && <Loader />}\n          {movies.length > 0 && !isLoading && (\n            <>\n              <div>\n                <MovieList movies={movies} state={{ from: location }} />\n              </div>\n            </>\n          )}\n          {total > 1 && page < total && !isLoading && (\n            <LoadMore loadMore={loadMore} />\n          )}\n        </Section>\n      </main>\n    </>\n  );\n}\n"],"names":["KEY","axios","serverHitsList","getHitsList","data","results","console","log","serverMovie","id","getMovieInfo","serverSearch","name","page","getMovieName","serverActors","getActors","cast","serverReviews","getReviews","LoaderWrap","styled","Loader","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","List","Item","FilmsName","Link","MovieInfoWrap","MovieInfo","MovieList","movies","state","map","poster_path","title","date","release_date","slice","to","src","defaultImg","alt","Section","Title","Form","Input","SearchBtn","SearchForm","updateQuery","onSubmit","evt","preventDefault","inputValue","currentTarget","elements","value","reset","type","placeholder","LoadMoreBtn","LoadMore","loadMore","onClick","Movies","useState","setPage","total","setTotal","useSearchParams","searchParams","setSearchParams","setMovies","isLoading","setIsLoading","location","useLocation","useEffect","movieName","get","moviesByName","prev","total_pages","message","query","length","from","prevState"],"sourceRoot":""}