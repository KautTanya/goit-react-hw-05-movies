{"version":3,"file":"static/js/387.991291f9.chunk.js","mappings":"mTAEMA,EAAM,mCAEZC,EAAAA,EAAAA,SAAAA,QADY,gCAKL,IAAMC,EAAc,mCAAG,6GAEAD,EAAAA,EAAAA,IAAA,qCACMD,IAHN,cAEpBG,EAFoB,gBAMbA,EAAYC,KAAKC,QANJ,wEAQ1BC,QAAQC,IAAR,MAR0B,yDAAH,qDAcdC,EAAW,mCAAG,WAAMC,GAAN,gGAEIR,EAAAA,EAAAA,IAAA,gBAChBQ,EADgB,oBACFT,EADE,oBAFJ,cAEjBU,EAFiB,gBAMVA,EAAaN,KANH,wEAQvBE,QAAQC,IAAR,MARuB,yDAAH,sDAcXI,EAAY,mCAAG,WAAOC,GAAP,4FAAaC,EAAb,+BAAoB,EAApB,kBAEGZ,EAAAA,EAAAA,IAAA,+BACDD,EADC,iCAC2BY,EAD3B,iBACwCC,EADxC,yBAFH,cAElBC,EAFkB,gBAMXA,EAAaV,KANF,0EAQxBE,QAAQC,IAAR,MARwB,0DAAH,sDAcZQ,EAAY,mCAAG,WAAMN,GAAN,gGAEAR,EAAAA,EAAAA,IAAA,gBACbQ,EADa,4BACST,EADT,oBAFA,cAElBgB,EAFkB,gBAMXA,EAAUZ,KAAKa,KANJ,wEAQxBX,QAAQC,IAAR,MARwB,yDAAH,sDAcZW,EAAa,mCAAG,WAAMT,GAAN,gGAEAR,EAAAA,EAAAA,IAAA,gBACdQ,EADc,4BACQT,EADR,oBAFA,cAEnBmB,EAFmB,gBAMZA,EAAWf,KAAKC,QANJ,wEAQzBC,QAAQC,IAAR,MARyB,yDAAH,qD,2LC9DpBa,EAAQC,EAAAA,GAAAA,GAAH,4IAQLC,EAAWD,EAAAA,GAAAA,GAAH,4EAMRE,EAAOF,EAAAA,GAAAA,GAAH,2DAKJG,EAAYH,EAAAA,GAAAA,EAAH,mIAQTI,EAAYJ,EAAAA,GAAAA,EAAH,kE,mBCdA,SAASK,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAgCE,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,YACR,mCAAC,2FACCD,GAAa,GADd,mBAG4BlB,EAAAA,EAAAA,IAAaY,GAHzC,OAGSQ,EAHT,OAIGJ,EAAYI,GACZF,GAAa,GALhB,gDAOG3B,QAAQC,IAAI,KAAM6B,SAPrB,yDAAD,sDAUD,GAAE,CAACT,KAGF,UAAC,IAAD,WACGK,IAAa,SAACK,EAAA,EAAD,KACZL,GAAaF,EAASQ,OAAS,IAC/B,iCACE,SAAClB,EAAD,oBACA,SAACE,EAAD,UACGQ,EAASS,KAAI,YAA4C,IAAzC9B,EAAwC,EAAxCA,GAAIG,EAAoC,EAApCA,KAAM4B,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aACpC,OACE,UAAClB,EAAD,YACE,gBACEmB,IACED,EAAY,6CAC8BA,GACtCE,EAENC,IAAG,UAAKhC,GACRiC,MAAM,SAGR,SAACrB,EAAD,UAAYZ,KACZ,SAACa,EAAD,UAAYe,MAZH/B,EAed,WAMZ,C,gFC7DYqC,E,MAAazB,GAAAA,IAAH,4F,SCEhB,SAASgB,IACd,OACE,+BACE,UAACS,EAAD,YACE,SAAC,KAAD,CACIC,OAAO,MACPF,MAAM,MACNG,MAAM,UACNC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,EACTC,UAAU,yBACVC,iBAAiB,GACjBC,iBAAiB,GACjBC,kBAAkB,KAXxB,QAgBL,C,uGCrBKC,EAAUnC,EAAAA,GAAAA,QAAH,kHAOPD,EAAQC,EAAAA,GAAAA,GAAH,sJ","sources":["API.jsx","components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","pages/Home/Home.styled.js"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '91ea660d45443b6457907c05dafcc6a1';\nconst URL = 'https://api.themoviedb.org/3/';\naxios.defaults.baseURL = URL;\n\n// фільми в тренді\n\nexport const serverHitsList = async () => {\n  try {\n    const getHitsList = await axios.get(\n      `trending/movie/day?api_key=${KEY}`\n    );\n\n    return await getHitsList.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// повне інфо про фільм\n\nexport const serverMovie = async id => {\n  try {\n    const getMovieInfo = await axios.get(\n      `movie/${id}?api_key=${KEY}&language=en-US`\n    );\n\n    return await getMovieInfo.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// пошук фільмів\n\nexport const serverSearch = async (name, page = 1) => {\n  try {\n    const getMovieName = await axios.get(\n      `search/movie?api_key=${KEY}&language=en-US&query=${name}&page=${page}&include_adult=false`\n    );\n\n    return await getMovieName.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// актори\n\nexport const serverActors = async id => {\n  try {\n    const getActors = await axios.get(\n      `movie/${id}/credits?api_key=${KEY}&language=en-US`\n    );\n\n    return await getActors.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// відгуки\n\nexport const serverReviews = async id => {\n  try {\n    const getReviews = await axios.get(\n      `movie/${id}/reviews?api_key=${KEY}&language=en-US`\n    );\n\n    return await getReviews.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import styled from 'styled-components';\n\nconst Title = styled.h3`\n  font-size: 40px;\n  text-transform: uppercase;\n  color: #05109e;\n  text-align: center;\n  margin-bottom: 40px;\n`;\n\nconst CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n`;\n\nconst Item = styled.li`\n  width: 150px;\n  height: 305px;\n`;\n\nconst NameActor = styled.p`\n  text-align: center;\n  color: #153f65;\n  font-size: 18px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n`;\n\nconst WorkActor = styled.p`\n  text-align: center;\n  color: #4c70ac;\n`;\n\nexport { Title, CastList, Item, NameActor, WorkActor };\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { serverActors } from '../../API';\nimport { Section } from '../../pages/Home/Home.styled.js';\nimport { Loader } from '../../components/Loader/Loader';\n\nimport {\n  Title,\n  CastList,\n  Item,\n  NameActor,\n  WorkActor,\n} from './Cast.styled.js';\nimport defaultImg from '../../img/anonymous.jpg';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [castList, setCastList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    (async function getActors() {\n      setIsLoading(true);\n      try {\n        const movieCasts = await serverActors(movieId);\n        setCastList(movieCasts);\n        setIsLoading(false);\n      } catch (error) {\n        console.log(error.message);\n      }\n    })();\n  }, [movieId]);\n\n  return (\n    <Section>\n      {isLoading && <Loader />}\n      {!isLoading && castList.length > 0 && (\n        <>\n          <Title>Cast</Title>\n          <CastList>\n            {castList.map(({ id, name, character, profile_path }) => {\n              return (\n                <Item key={id}>\n                  <img\n                    src={\n                      profile_path\n                        ? `https://image.tmdb.org/t/p/original${profile_path}`\n                        : defaultImg\n                    }\n                    alt={`${name}`}\n                    width=\"150\"\n                  />\n\n                  <NameActor>{name}</NameActor>\n                  <WorkActor>{character}</WorkActor>\n                </Item>\n              );\n            })}\n          </CastList>\n        </>\n      )}\n    </Section>\n  );\n}\n","import styled from 'styled-components';\n\nexport const LoaderWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 100px;\n`;\n","import { ThreeCircles } from 'react-loader-spinner';\n\nimport { LoaderWrap } from './Loader.styled.js';\n\nexport function Loader() {\n  return (\n    <>\n      <LoaderWrap>\n        <ThreeCircles\n            height=\"100\"\n            width=\"100\"\n            color=\"#05109e\"\n            wrapperStyle={{}}\n            wrapperClass=\"\"\n            visible={true}\n            ariaLabel=\"three-circles-rotating\"\n            outerCircleColor=\"\"\n            innerCircleColor=\"\"\n            middleCircleColor=\"\"\n          />;\n      </LoaderWrap>\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nconst Section = styled.section`\n  padding: 30px 15px;\n  max-width: 1320px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Title = styled.h1`\n  font-size: 36px;\n  text-align: center;\n  color: #153f65;\n  margin-bottom: 50px;\n  letter-spacing: 8px;\n  opacity: 0.7;\n`;\n\nexport { Title, Section };\n"],"names":["KEY","axios","serverHitsList","getHitsList","data","results","console","log","serverMovie","id","getMovieInfo","serverSearch","name","page","getMovieName","serverActors","getActors","cast","serverReviews","getReviews","Title","styled","CastList","Item","NameActor","WorkActor","Cast","movieId","useParams","useState","castList","setCastList","isLoading","setIsLoading","useEffect","movieCasts","message","Loader","length","map","character","profile_path","src","defaultImg","alt","width","LoaderWrap","height","color","wrapperStyle","wrapperClass","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","Section"],"sourceRoot":""}