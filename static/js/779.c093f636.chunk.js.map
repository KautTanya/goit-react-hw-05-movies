{"version":3,"file":"static/js/779.c093f636.chunk.js","mappings":"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","sources":["API.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","pages/Home/Home.styled.js"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '91ea660d45443b6457907c05dafcc6a1';\nconst URL = 'https://api.themoviedb.org/3/';\naxios.defaults.baseURL = URL;\n\n// фільми в тренді\n\nexport const serverHitsList = async () => {\n  try {\n    const getHitsList = await axios.get(\n      `trending/movie/day?api_key=${KEY}`\n    );\n\n    return await getHitsList.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// повне інфо про фільм\n\nexport const serverMovie = async id => {\n  try {\n    const getMovieInfo = await axios.get(\n      `movie/${id}?api_key=${KEY}&language=en-US`\n    );\n\n    return await getMovieInfo.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// пошук фільмів\n\nexport const serverSearch = async (name, page = 1) => {\n  try {\n    const getMovieName = await axios.get(\n      `search/movie?api_key=${KEY}&language=en-US&query=${name}&page=${page}&include_adult=false`\n    );\n\n    return await getMovieName.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// актори\n\nexport const serverActors = async id => {\n  try {\n    const getActors = await axios.get(\n      `movie/${id}/credits?api_key=${KEY}&language=en-US`\n    );\n\n    return await getActors.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// відгуки\n\nexport const serverReviews = async id => {\n  try {\n    const getReviews = await axios.get(\n      `movie/${id}/reviews?api_key=${KEY}&language=en-US`\n    );\n\n    return await getReviews.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import styled from 'styled-components';\n\nexport const LoaderWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 100px;\n`;\n","import { ThreeCircles } from 'react-loader-spinner';\n\nimport { LoaderWrap } from './Loader.styled.js';\n\nexport function Loader() {\n  return (\n    <>\n      <LoaderWrap>\n        <ThreeCircles\n            height=\"100\"\n            width=\"100\"\n            color=\"#05109e\"\n            wrapperStyle={{}}\n            wrapperClass=\"\"\n            visible={true}\n            ariaLabel=\"three-circles-rotating\"\n            outerCircleColor=\"\"\n            innerCircleColor=\"\"\n            middleCircleColor=\"\"\n          />;\n      </LoaderWrap>\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nconst Title = styled.h3`\n  font-size: 40px;\n  text-transform: uppercase;\n  color: #05109e;\n  text-align: center;\n  margin-bottom: 40px;\n`;\n\nconst List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n`;\n\nconst InfoMessage = styled.p`\n  color: #4c70ac;\n  font-size: 20px;\n`;\n\nconst Text = styled.p`\n  color: #4c70ac;\n  font-size: 18px;\n  line-height: 1.7;\n`;\n\nconst DateReview = styled.p`\n  color: #0d257b;\n  font-size: 14px;\n  margin-bottom: 15px;\n`;\n\nconst AutorReview = styled.p`\n  color: #0d257b;\n  font-size: 24px;\n  margin-bottom: 15px;\n`;\nexport { Title, List, InfoMessage, Text, DateReview, AutorReview };\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { serverReviews } from '../../API';\nimport { Loader } from '../../components/Loader/Loader';\nimport { Section } from '../../pages/Home/Home.styled.js';\nimport {\n  Title,\n  InfoMessage,\n  Text,\n  DateReview,\n  AutorReview,\n  List,\n} from './Reviews.styled.js';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    (async function getReviews() {\n      setIsLoading(true);\n      try {\n        const movieReviews = await serverReviews(movieId);\n        setReviews(movieReviews);\n        setIsLoading(false);\n      } catch (error) {\n        console.log(error.message);\n      }\n    })();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {!isLoading && reviews.length > 0 && (\n        <Section>\n          <Title>Reviews</Title>\n          <List>\n            {reviews.map(({ author, content, id, updated_at }) => {\n              return (\n                <li key={id}>\n                  <AutorReview>\n                    <b>{author}</b>\n                  </AutorReview>\n                  <DateReview>{updated_at.split('T')[0]}</DateReview>\n                  <Text>\"{content}\"</Text>\n                </li>\n              );\n            })}\n          </List>\n        </Section>\n      )}\n\n      {!isLoading && reviews.length === 0 && (\n        <Section>\n          <InfoMessage>\n            Sorry, we don't have any reviews for this movie.\n          </InfoMessage>\n        </Section>\n      )}\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nconst Section = styled.section`\n  padding: 30px 15px;\n  max-width: 1320px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Title = styled.h1`\n  font-size: 36px;\n  text-align: center;\n  color: #153f65;\n  margin-bottom: 50px;\n  letter-spacing: 8px;\n  opacity: 0.7;\n`;\n\nexport { Title, Section };\n"],"names":["KEY","axios","serverHitsList","getHitsList","data","results","console","log","serverMovie","id","getMovieInfo","serverSearch","name","page","getMovieName","serverActors","getActors","cast","serverReviews","getReviews","LoaderWrap","styled","Loader","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","Title","List","InfoMessage","Text","DateReview","AutorReview","Reviews","movieId","useParams","useState","reviews","setReviews","isLoading","setIsLoading","useEffect","movieReviews","message","length","map","author","content","updated_at","split","Section"],"sourceRoot":""}